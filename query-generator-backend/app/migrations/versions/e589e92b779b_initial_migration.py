"""Initial migration

Revision ID: e589e92b779b
Revises: 
Create Date: 2025-09-06 22:38:36.850213

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e589e92b779b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('auth_user_roles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_name', sa.String(length=50), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['auth_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_user_roles_user_id'), 'auth_user_roles', ['user_id'], unique=False)
    op.create_table('dq_catalogs',
    sa.Column('engine', sa.String(length=50), nullable=False),
    sa.Column('catalog_name', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=100), nullable=True),
    sa.Column('raw_json', sa.JSON(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dq_embeddings',
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('qdrant_point_id', sa.String(length=255), nullable=True),
    sa.Column('kind', sa.String(length=20), nullable=False),
    sa.Column('catalog_id', sa.UUID(), nullable=True),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('embedding_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dq_embeddings_catalog_id'), 'dq_embeddings', ['catalog_id'], unique=False)
    op.create_index(op.f('ix_dq_embeddings_entity_id'), 'dq_embeddings', ['entity_id'], unique=False)
    op.create_index(op.f('ix_dq_embeddings_qdrant_point_id'), 'dq_embeddings', ['qdrant_point_id'], unique=False)
    op.create_table('dq_examples',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('sql_snippet', sa.Text(), nullable=False),
    sa.Column('engine', sa.String(length=50), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('catalog_id', sa.UUID(), nullable=True),
    sa.Column('example_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dq_feedback',
    sa.Column('history_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('correctness', sa.Integer(), nullable=True),
    sa.Column('completeness', sa.Integer(), nullable=True),
    sa.Column('efficiency', sa.Integer(), nullable=True),
    sa.Column('suggested_sql', sa.Text(), nullable=True),
    sa.Column('improvement_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dq_feedback_history_id'), 'dq_feedback', ['history_id'], unique=False)
    op.create_table('dq_history',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('catalog_id', sa.UUID(), nullable=False),
    sa.Column('engine', sa.String(length=50), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('constraints', sa.JSON(), nullable=True),
    sa.Column('generated_sql', sa.Text(), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('syntax_valid', sa.Boolean(), nullable=True),
    sa.Column('policy_violations', sa.JSON(), nullable=True),
    sa.Column('guardrails_applied', sa.JSON(), nullable=True),
    sa.Column('model_used', sa.String(length=100), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('generation_time_ms', sa.Float(), nullable=True),
    sa.Column('context_chunks', sa.Integer(), nullable=True),
    sa.Column('context_sources', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dq_history_catalog_id'), 'dq_history', ['catalog_id'], unique=False)
    op.create_index(op.f('ix_dq_history_user_id'), 'dq_history', ['user_id'], unique=False)
    op.create_table('dq_metrics',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('expression', sa.Text(), nullable=False),
    sa.Column('engine', sa.String(length=50), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('catalog_id', sa.UUID(), nullable=True),
    sa.Column('metric_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dq_notes',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('catalog_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dq_objects',
    sa.Column('catalog_id', sa.UUID(), nullable=False),
    sa.Column('object_type', sa.String(length=20), nullable=False),
    sa.Column('schema_name', sa.String(length=255), nullable=True),
    sa.Column('table_name', sa.String(length=255), nullable=True),
    sa.Column('column_name', sa.String(length=255), nullable=True),
    sa.Column('data_type', sa.String(length=100), nullable=True),
    sa.Column('is_nullable', sa.Boolean(), nullable=True),
    sa.Column('is_primary_key', sa.Boolean(), nullable=True),
    sa.Column('is_foreign_key', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('object_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['catalog_id'], ['dq_catalogs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dq_objects_catalog_id'), 'dq_objects', ['catalog_id'], unique=False)
    op.create_table('dq_policies',
    sa.Column('catalog_id', sa.UUID(), nullable=False),
    sa.Column('allow_write', sa.Boolean(), nullable=False),
    sa.Column('default_limit', sa.Integer(), nullable=True),
    sa.Column('banned_tables', sa.JSON(), nullable=True),
    sa.Column('banned_columns', sa.JSON(), nullable=True),
    sa.Column('banned_schemas', sa.JSON(), nullable=True),
    sa.Column('pii_tags', sa.JSON(), nullable=True),
    sa.Column('pii_masking_enabled', sa.Boolean(), nullable=False),
    sa.Column('max_rows_returned', sa.Integer(), nullable=True),
    sa.Column('allowed_functions', sa.JSON(), nullable=True),
    sa.Column('blocked_functions', sa.JSON(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dq_policies_catalog_id'), 'dq_policies', ['catalog_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dq_policies_catalog_id'), table_name='dq_policies')
    op.drop_table('dq_policies')
    op.drop_index(op.f('ix_dq_objects_catalog_id'), table_name='dq_objects')
    op.drop_table('dq_objects')
    op.drop_table('dq_notes')
    op.drop_table('dq_metrics')
    op.drop_index(op.f('ix_dq_history_user_id'), table_name='dq_history')
    op.drop_index(op.f('ix_dq_history_catalog_id'), table_name='dq_history')
    op.drop_table('dq_history')
    op.drop_index(op.f('ix_dq_feedback_history_id'), table_name='dq_feedback')
    op.drop_table('dq_feedback')
    op.drop_table('dq_examples')
    op.drop_index(op.f('ix_dq_embeddings_catalog_id'), table_name='dq_embeddings')
    op.drop_table('dq_embeddings')
    op.drop_table('dq_catalogs')
    op.drop_index(op.f('ix_auth_user_roles_user_id'), table_name='auth_user_roles')
    op.drop_table('auth_user_roles')
    op.drop_table('auth_users')
    # ### end Alembic commands ### 